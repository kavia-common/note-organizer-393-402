{"is_source_file": true, "format": "JavaScript", "description": "This file implements a set of asynchronous service functions for managing notes within a note-taking application. It provides CRUD operations for notes, tags, and categories, and facilitates querying notes based on various filters.", "external_files": ["../models/models"], "external_methods": ["Note.create", "Note.findAll", "Note.findOne", "Note.destroy", "Note.prototype.setTags", "Note.prototype.addTag", "Note.prototype.removeTag", "Tag.findOrCreate", "Tag.findOne", "Category.findAll", "Category.create", "Category.findOne", "Category.prototype.save", "Category.destroy"], "published": ["createNote", "getNotes", "getNoteById", "updateNote", "deleteNote", "setNoteTags", "addTagToNote", "removeTagFromNote", "getUserTags", "getCategories", "createCategory", "updateCategory", "deleteCategory"], "classes": [], "methods": [{"name": "createNote(userId, title, content, categoryId = null, tagNames = [])", "description": "Creates a new note for a specified user with optional tags and category, then retrieves the full note data.", "scope": "", "scopeKind": ""}, {"name": "getNotes(userId, { search, categoryId, tag } = {})", "description": "Retrieves all notes for a user, with optional filtering by search term, category, or tag.", "scope": "", "scopeKind": ""}, {"name": "getNoteById(userId, noteId)", "description": "Fetches a single note by its ID for a specific user, including associated tags and category.", "scope": "", "scopeKind": ""}, {"name": "updateNote(userId, noteId, { title, content, categoryId, tagNames })", "description": "Updates properties of an existing note, including title, content, category, and tags.", "scope": "", "scopeKind": ""}, {"name": "deleteNote(userId, noteId)", "description": "Deletes a note belonging to a user by its ID.", "scope": "", "scopeKind": ""}, {"name": "setNoteTags(note, tagNames)", "description": "Associates a list of tags with a note, creating tags if they do not exist.", "scope": "", "scopeKind": ""}, {"name": "addTagToNote(userId, noteId, tagName)", "description": "Adds a specific tag to a note, creating the tag if it does not exist.", "scope": "", "scopeKind": ""}, {"name": "removeTagFromNote(userId, noteId, tagName)", "description": "Removes a specific tag from a note.", "scope": "", "scopeKind": ""}, {"name": "getUserTags(userId)", "description": "Retrieves all tags associated with notes belonging to a user.", "scope": "", "scopeKind": ""}, {"name": "getCategories(userId)", "description": "Fetches all categories for a user.", "scope": "", "scopeKind": ""}, {"name": "createCategory(userId, name)", "description": "Creates a new category for a user.", "scope": "", "scopeKind": ""}, {"name": "updateCategory(userId, categoryId, name)", "description": "Updates the name of an existing category.", "scope": "", "scopeKind": ""}, {"name": "deleteCategory(userId, categoryId)", "description": "Deletes a category for a user.", "scope": "", "scopeKind": ""}], "calls": ["Note.create", "Note.findAll", "Note.findOne", "Note.destroy", "note.setTags", "note.addTag", "note.removeTag", "Tag.findOrCreate", "Tag.findOne", "Category.findAll", "Category.create", "Category.findOne", "category.save", "category.destroy"], "search-terms": ["notes", "tags", "categories", "createNote", "getNotes", "setNoteTags", "addTagToNote", "removeTagFromNote", "getUserTags", "createCategory"], "state": 2, "file_id": 16, "knowledge_revision": 33, "git_revision": "", "ctags": [{"_type": "tag", "name": "addTagToNote", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function addTagToNote(userId, noteId, tagName) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, noteId, tagName)"}, {"_type": "tag", "name": "createCategory", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function createCategory(userId, name) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, name)"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^  createNote,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function createNote(userId, title, content, categoryId = null, tagNames = []) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, title, content, categoryId = null, tagNames = [])"}, {"_type": "tag", "name": "deleteCategory", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function deleteCategory(userId, categoryId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, categoryId)"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function deleteNote(userId, noteId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, noteId)"}, {"_type": "tag", "name": "getCategories", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function getCategories(userId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId)"}, {"_type": "tag", "name": "getNoteById", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function getNoteById(userId, noteId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, noteId)"}, {"_type": "tag", "name": "getNotes", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function getNotes(userId, { search, categoryId, tag } = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, { search, categoryId, tag } = {})"}, {"_type": "tag", "name": "getUserTags", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function getUserTags(userId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId)"}, {"_type": "tag", "name": "removeTagFromNote", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function removeTagFromNote(userId, noteId, tagName) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, noteId, tagName)"}, {"_type": "tag", "name": "setNoteTags", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function setNoteTags(note, tagNames) {$/", "language": "JavaScript", "kind": "function", "signature": "(note, tagNames)"}, {"_type": "tag", "name": "updateCategory", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function updateCategory(userId, categoryId, name) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, categoryId, name)"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^async function updateNote(userId, noteId, { title, content, categoryId, tagNames }) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, noteId, { title, content, categoryId, tagNames })"}, {"_type": "tag", "name": "userId", "path": "/home/kavia/workspace/code-generation/note-organizer-393-402/notes_backend/src/services/notes.js", "pattern": "/^  const where = { userId };$/", "language": "JavaScript", "kind": "field", "scope": "getNotes.where", "scopeKind": "class"}], "hash": "37b9bc21281441c38e0aae62e286eb9f", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/services/notes.js", "fields": [{"name": "createNote,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}, {"name": "const where = { userId };", "scope": "getNotes.where", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"33": ""}]}